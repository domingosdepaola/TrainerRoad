//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BikeDistributor.Test.ServiceReferenceOrder {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Order", Namespace="http://schemas.datacontract.org/2004/07/Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class Order : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeDistributor.Test.ServiceReferenceOrder.Line[] LineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<double> TaxRateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeDistributor.Test.ServiceReferenceOrder.Line[] Line {
            get {
                return this.LineField;
            }
            set {
                if ((object.ReferenceEquals(this.LineField, value) != true)) {
                    this.LineField = value;
                    this.RaisePropertyChanged("Line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> TaxRate {
            get {
                return this.TaxRateField;
            }
            set {
                if ((this.TaxRateField.Equals(value) != true)) {
                    this.TaxRateField = value;
                    this.RaisePropertyChanged("TaxRate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Line", Namespace="http://schemas.datacontract.org/2004/07/Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class Line : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeDistributor.Test.ServiceReferenceOrder.Bike BikeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdBikeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeDistributor.Test.ServiceReferenceOrder.Order OrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeDistributor.Test.ServiceReferenceOrder.Bike Bike {
            get {
                return this.BikeField;
            }
            set {
                if ((object.ReferenceEquals(this.BikeField, value) != true)) {
                    this.BikeField = value;
                    this.RaisePropertyChanged("Bike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdBike {
            get {
                return this.IdBikeField;
            }
            set {
                if ((this.IdBikeField.Equals(value) != true)) {
                    this.IdBikeField = value;
                    this.RaisePropertyChanged("IdBike");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IdOrder {
            get {
                return this.IdOrderField;
            }
            set {
                if ((this.IdOrderField.Equals(value) != true)) {
                    this.IdOrderField = value;
                    this.RaisePropertyChanged("IdOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeDistributor.Test.ServiceReferenceOrder.Order Order {
            get {
                return this.OrderField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderField, value) != true)) {
                    this.OrderField = value;
                    this.RaisePropertyChanged("Order");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bike", Namespace="http://schemas.datacontract.org/2004/07/Domain.Entity")]
    [System.SerializableAttribute()]
    public partial class Bike : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BikeDistributor.Test.ServiceReferenceOrder.Line[] LineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((object.ReferenceEquals(this.BrandField, value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BikeDistributor.Test.ServiceReferenceOrder.Line[] Line {
            get {
                return this.LineField;
            }
            set {
                if ((object.ReferenceEquals(this.LineField, value) != true)) {
                    this.LineField = value;
                    this.RaisePropertyChanged("Line");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Model {
            get {
                return this.ModelField;
            }
            set {
                if ((object.ReferenceEquals(this.ModelField, value) != true)) {
                    this.ModelField = value;
                    this.RaisePropertyChanged("Model");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferenceOrder.IServiceOrderWCF")]
    public interface IServiceOrderWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/CreateOrder", ReplyAction="http://tempuri.org/IServiceOrderWCF/CreateOrderResponse")]
        int CreateOrder(BikeDistributor.Test.ServiceReferenceOrder.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/CreateOrder", ReplyAction="http://tempuri.org/IServiceOrderWCF/CreateOrderResponse")]
        System.Threading.Tasks.Task<int> CreateOrderAsync(BikeDistributor.Test.ServiceReferenceOrder.Order order);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/GetReceipt", ReplyAction="http://tempuri.org/IServiceOrderWCF/GetReceiptResponse")]
        string GetReceipt(int idOrder, bool html);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/GetReceipt", ReplyAction="http://tempuri.org/IServiceOrderWCF/GetReceiptResponse")]
        System.Threading.Tasks.Task<string> GetReceiptAsync(int idOrder, bool html);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/GenerateOrderWithRecept", ReplyAction="http://tempuri.org/IServiceOrderWCF/GenerateOrderWithReceptResponse")]
        string GenerateOrderWithRecept(BikeDistributor.Test.ServiceReferenceOrder.Order order, bool htmlRecept);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceOrderWCF/GenerateOrderWithRecept", ReplyAction="http://tempuri.org/IServiceOrderWCF/GenerateOrderWithReceptResponse")]
        System.Threading.Tasks.Task<string> GenerateOrderWithReceptAsync(BikeDistributor.Test.ServiceReferenceOrder.Order order, bool htmlRecept);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceOrderWCFChannel : BikeDistributor.Test.ServiceReferenceOrder.IServiceOrderWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceOrderWCFClient : System.ServiceModel.ClientBase<BikeDistributor.Test.ServiceReferenceOrder.IServiceOrderWCF>, BikeDistributor.Test.ServiceReferenceOrder.IServiceOrderWCF {
        
        public ServiceOrderWCFClient() {
        }
        
        public ServiceOrderWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceOrderWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceOrderWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateOrder(BikeDistributor.Test.ServiceReferenceOrder.Order order) {
            return base.Channel.CreateOrder(order);
        }
        
        public System.Threading.Tasks.Task<int> CreateOrderAsync(BikeDistributor.Test.ServiceReferenceOrder.Order order) {
            return base.Channel.CreateOrderAsync(order);
        }
        
        public string GetReceipt(int idOrder, bool html) {
            return base.Channel.GetReceipt(idOrder, html);
        }
        
        public System.Threading.Tasks.Task<string> GetReceiptAsync(int idOrder, bool html) {
            return base.Channel.GetReceiptAsync(idOrder, html);
        }
        
        public string GenerateOrderWithRecept(BikeDistributor.Test.ServiceReferenceOrder.Order order, bool htmlRecept) {
            return base.Channel.GenerateOrderWithRecept(order, htmlRecept);
        }
        
        public System.Threading.Tasks.Task<string> GenerateOrderWithReceptAsync(BikeDistributor.Test.ServiceReferenceOrder.Order order, bool htmlRecept) {
            return base.Channel.GenerateOrderWithReceptAsync(order, htmlRecept);
        }
    }
}
